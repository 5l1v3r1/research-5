<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="xml"?>
<?xml-stylesheet type="text/xsl" href="whitepaper.xsl" ?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.0">
    <info>
        <title>SSL Server Rating Guide</title>
        <releaseinfo>version 2009k (14 October 2015)</releaseinfo>
        <copyright>
            <year>2009-2015</year>
            <holder>Qualys SSL Labs (www.ssllabs.com)</holder>
        </copyright>
        <abstract>
            <para>The Secure Sockets Layer (SSL) protocol is a standard for encrypted network
                communication. We feel that there is surprisingly little attention paid to how SSL
                is configured, given its widespread usage. SSL is relatively easy to use, but it
                does have its traps. This guide aims to establish a straightforward assessment
                methodology, allowing administrators to assess SSL server configuration confidently
                without the need to become SSL experts.</para>
        </abstract>
    </info>
    <section>
        <title>Methodology Overview</title>
        <para>Our approach consists of four steps:</para>
        <orderedlist>
            <listitem>
                <para>We first look at a certificate to verify that it is valid and trusted.</para>
            </listitem>
            <listitem>
                <para>We inspect server configuration in three categories:</para>
                <orderedlist>
                    <listitem>
                        <para>Protocol support</para>
                    </listitem>
                    <listitem>
                        <para>Key exchange support</para>
                    </listitem>
                    <listitem>
                        <para>Cipher support</para>
                    </listitem>
                </orderedlist>
            </listitem>
            <listitem>
                <para>We combine the category scores into an overall score (expressed as a number
                    between 0 and 100). A zero in any category will push the overall score to zero.
                    Then, a letter grade is calculated, using the table below.</para>
            </listitem>
            <listitem>
                <para>We then apply a series of rules (documented in the Changes section) to handle
                    some aspects of server configuration that cannot be expressed via numerical
                    scoring. Most rules will reduce the grade (to A-, B, C, D, E, or F) if they
                    encounter an unwanted feature. Some rules will increase the grade (to A+), to
                    reward exceptional configurations.</para>
            </listitem>
        </orderedlist>
        <table xml:id="table-grades">
            <title>Letter grade translation</title>
            <tgroup cols="2">
                <colspec colname="c1" colnum="1"/>
                <colspec colname="c2" colnum="2"/>
                <thead>
                    <row>
                        <entry>Numerical Score</entry>
                        <entry>Grade</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>score >= 80</entry>
                        <entry>A</entry>
                    </row>
                    <row>
                        <entry>score >= 65</entry>
                        <entry>B</entry>
                    </row>
                    <row>
                        <entry>score >= 50</entry>
                        <entry>C</entry>
                    </row>
                    <row>
                        <entry>score >= 35</entry>
                        <entry>D</entry>
                    </row>
                    <row>
                        <entry>score >= 20</entry>
                        <entry>E</entry>
                    </row>
                    <row>
                        <entry>score &lt; 20</entry>
                        <entry>F</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <para>Our methodology was initially designed to be simple and straightforward, but has,
            unfortunately, gotten more complicated over time. This document has not been fully
            updated to reflect the changes. In the next major version, we will start afresh, aiming
            to go back to the original simplicity.</para>
        <section>
            <title>What This Guide Does Not Cover</title>
            <para>Our immediate goal is to focus on those configuration problems whose presence can
                be determined remotely and without manual assessment. It is only a fully automated
                approach that makes it possible to perform a large-scale assessment of SSL
                configuration practices. Our aim is to scan all SSL servers on the public
                Internet.</para>
            <para>In focusing on automation, we have decided not to look for certain problems. We
                will list those problems in this guide, and hopefully find ways to enhance our
                automation to include them in a future version of this guide. Some of those problems
                are listed here:</para>
            <variablelist>
                <varlistentry>
                    <term>Certificate quality</term>
                    <listitem>
                        <para>Three certificate types are currently in use: domain-validated,
                            organization-validated and extended-validation (EV) certificates. This
                            guide requires a certificate to be correct, but does not go beyond this
                            basic requirement. The domain-validated and organization-validated
                            certificates are generally treated in the same way by the current
                            generation of browser software, and thus offer similar assurance to
                            users. EV certificates are treated significantly better and, generally,
                            they are recommended for high-value web sites. Without a reliable way to
                            determine the purpose of a web site, however, there is little that this
                            guide can do to assess whether a certificate used on an arbitrary site
                            is suitable for the purpose of the site. </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Session hijacking issues in web applications</term>
                    <listitem>
                        <para>There are several ways in which web applications can subvert SSL and
                            make it less effective. For example, session cookies that are not marked
                            as secure can be retrieved by a determined attacker, leading to session
                            hijacking and thus application compromise. Such problems are not the
                            fault of SSL, but they do affect its practical applications
                            nevertheless. Detecting web application&#8211;specific problems is
                            non-trivial to perform in an automated fashion, and this version of the
                            guide does not attempt to do it. We leave this problem for the
                            consideration in the future. In the meantime, to remove any doubt that
                            might exist about the seriousness of the above-mentioned issues, we will
                            state that any application that incorrectly implements session token
                            propagation should be awarded a zero score.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </section>
        <section>
            <title>What Should My Score Be?</title>
            <para>We don&#x2019;t know. In order to tell you whether you&#x2019;ve configured your
                SSL server correctly, we would need to know what your site does. Because different
                web sites have different needs, it is not possible for us to choose any one
                configuration and say that it works for everyone. But we can do two things. First,
                we can give you some general configuration advice and tell you what you should never
                do. Second, we can give you some general guidance using examples of what other web
                sites do. If that&#x2019;s what you are interested in, skip to the end of this
                document for more information. </para>
        </section>
        <section>
            <title>Is SSL Enough?</title>
            <para>No. A non-trivial web site cannot be secure if it does not implement SSL, but SSL
                is not enough. SSL deals with only one aspect of security, and that is the security
                of the communication channel between a web site and its users. SSL does not and
                cannot address a number of possible security issues that may exist on a web site.
                View SSL as a foundation on which to build, but the foundation alone is not
                enough.</para>
        </section>
        <section>
            <title>Acknowledgments</title>
            <para>The first version of this guide was written by <link
                    xlink:href="http://blog.ivanristic.com">Ivan Ristic</link>, and subsequently
                enhanced by the contributions from the following individuals, listed in alphabetical
                order: Christian Bockermann, Christian Folini, Robert Hansen, Ofer Shezaf and Colin
                Watson.</para>
        </section>
    </section>
    <section>
        <title>Certificate Inspection</title>
        <para>Server certificate is often the weakest point of an SSL server configuration. A
            certificate that is not trusted (i.e., is not ultimately signed by a well-known
            certificate authority) fails to prevent man-in-the-middle (MITM) attacks and renders SSL
            effectively useless. A certificate that is incorrect in some other way (e.g., a
            certificate that has expired) erodes trust and, in the long term, jeopardizes the
            security of the Internet as a whole. </para>
        <para>For these reasons, any of the following certificate issues immediately result in a
            zero score:</para>
        <itemizedlist>
            <listitem>
                <para>Domain name mismatch</para>
            </listitem>
            <listitem>
                <para>Certificate not yet valid</para>
            </listitem>
            <listitem>
                <para>Certificate expired</para>
            </listitem>
            <listitem>
                <para>Use of a self-signed certificate</para>
            </listitem>
            <listitem>
                <para>Use of a certificate that is not trusted (unknown CA or some other validation
                    error)</para>
            </listitem>
            <listitem>
                <para>Use of a revoked certificate</para>
            </listitem>
            <listitem>
                <para>Insecure certificate signature (MD2 or MD5)</para>
            </listitem>
            <listitem>
                <para>Insecure key</para>
            </listitem>
        </itemizedlist>
        <note>
            <para>Some organizations create their own (private) CA certificates, a practice that is
                entirely legitimate, provided such CA certificates are distributed, in a safe manner
                (e.g., through the use of customized browsers) to all those who need it. Without the
                access to such certificates we may not be able to verify that a site we are
                inspecting has a trusted certificate, but we believe that such sites will be
                relatively rare. Such issues can be considered on a case-by-case basis.</para>
        </note>
    </section>
    <section>
        <title>Scoring</title>
        <para>SSL is a complex hybrid protocol with support for many features across several phases
            of operation. To account for the complexity, we rate the configuration of an SSL server
            in three categories, as displayed in <xref linkend="table-criteria-categories"/>. We
            calculate the final score as a combination of the scores in the individual categories,
            as described in the &#x201c;Methodology Overview&#x201d; section.</para>
        <table xml:id="table-criteria-categories">
            <title>Criteria categories</title>
            <tgroup cols="2">
                <colspec colname="c1" colnum="1"/>
                <colspec colname="c2" colnum="2"/>
                <thead>
                    <row>
                        <entry>Category</entry>
                        <entry>Score</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>Protocol support</entry>
                        <entry>30%</entry>
                    </row>
                    <row>
                        <entry>Key exchange</entry>
                        <entry>30%</entry>
                    </row>
                    <row>
                        <entry>Cipher strength</entry>
                        <entry>40%</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <para>The sections that follow explain the rating system for each of the categories.</para>
        <section>
            <title>Protocol Support</title>
            <para>First, we look at the protocols supported by an SSL server. For example, both SSL
                2.0 and SSL 3.0 have known weaknesses. Because a server can support several
                protocols, we use the following algorithm to arrive to the final score:</para>
            <orderedlist>
                <listitem>
                    <para>Start with the score of the best protocol.</para>
                </listitem>
                <listitem>
                    <para>Add the score of the worst protocol.</para>
                </listitem>
                <listitem>
                    <para>Divide the total by 2.</para>
                </listitem>
            </orderedlist>
            <table xml:id="table-protocol-support">
                <title>Protocol support rating guide</title>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1"/>
                    <colspec colname="c2" colnum="2"/>
                    <thead>
                        <row>
                            <entry>Protocol</entry>
                            <entry>Score</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>SSL 2.0</entry>
                            <entry>0%</entry>
                        </row>
                        <row>
                            <entry>SSL 3.0</entry>
                            <entry>80%</entry>
                        </row>
                        <row>
                            <entry>TLS 1.0</entry>
                            <entry>90%</entry>
                        </row>
                        <row>
                            <entry>TLS 1.1</entry>
                            <entry>95%</entry>
                        </row>
                        <row>
                            <entry>TLS 1.2</entry>
                            <entry>100%</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section>
            <title>Key Exchange</title>
            <para>The key exchange phase serves two functions. One is to perform authentication,
                allowing at least one party to verify the identity of the other party. The other is
                to ensure the safe generation and exchange of the secret keys that will be used
                during the remainder of the session. The weaknesses in the key exchange phase affect
                the session in two ways:</para>
            <itemizedlist>
                <listitem>
                    <para>Key exchange without authentication allows an active attacker to perform a
                        MITM attack, gaining access to the complete communication channel.</para>
                </listitem>
                <listitem>
                    <para>Most servers also rely on public cryptography for the key exchange. Thus.
                        the stronger the server&#x2019;s private key, the more difficult it is to
                        break the key exchange phase. A weak key, or an exchange procedure that uses
                        only a part of the key (the so-called exportable key exchanges), can result
                        in a weak key exchange phase that makes the per-session secret keys easier
                        to compromise. Some servers use key exchange mechanisms that do not depend
                        on the private key (the key is still used for authentication). Two popular
                        algorithms are the ephemeral Diffie-Hellman key exchange (DHE) and its
                        Elliptic Crypto variation ECDHE. If a separate key exchange mechanism is
                        used, the overall strength will depend on its strength and the strength of
                        the private key.</para>
                </listitem>
            </itemizedlist>
            <table xml:id="table-key-exchange">
                <title>Key exchange rating guide</title>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1*"/>
                    <colspec colname="c2" colnum="2" colwidth="1*"/>
                    <thead>
                        <row>
                            <entry>Key exchange aspect</entry>
                            <entry>Score</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>Weak key (Debian OpenSSL flaw)</entry>
                            <entry>0%</entry>
                        </row>
                        <row>
                            <entry>Anonymous key exchange (no authentication)</entry>
                            <entry>0%</entry>
                        </row>
                        <row>
                            <entry>Key or DH parameter strength &lt; 512 bits</entry>
                            <entry>20%</entry>
                        </row>
                        <row>
                            <entry>Exportable key exchange (limited to 512 bits)</entry>
                            <entry>40%</entry>
                        </row>
                        <row>
                            <entry>Key or DH parameter strength &lt; 1024 bits (e.g., 512)</entry>
                            <entry>40%</entry>
                        </row>
                        <row>
                            <entry>Key or DH parameter strength &lt; 2048 bits (e.g., 1024)</entry>
                            <entry>80%</entry>
                        </row>
                        <row>
                            <entry>Key or DH parameter strength &lt; 4096 bits (e.g., 2048)</entry>
                            <entry>90%</entry>
                        </row>
                        <row>
                            <entry>Key or DH parameter strength >= 4096 bits (e.g., 4096)</entry>
                            <entry>100%</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <note>
                <para>For suites that rely on DHE or ECDHE key exchange, the strength of DH
                    parameters is taken into account when determining the strength of the handshake
                    as a whole. Many servers that support DHE use DH parameters that provide 1024
                    bits of security. On such servers, the strength of the key exchange will never
                    go above 1024 bits, even if the private key is stronger (usually 2048
                    bits).</para>
            </note>
        </section>
        <section>
            <title>Cipher Strength</title>
            <para>To break a communication session, an attacker can attempt to break the symmetric
                cipher used for the bulk of the communication. A stronger cipher allows for stronger
                encryption and thus increases the effort needed to break it. Because a server can
                support ciphers of varying strengths, we arrived at a scoring system that penalizes
                the use of weak ciphers. To calculate the score for this category, we follow this
                algorithm: </para>
            <orderedlist>
                <listitem>
                    <para>Start with the score of the strongest cipher.</para>
                </listitem>
                <listitem>
                    <para>Add the score of the weakest cipher.</para>
                </listitem>
                <listitem>
                    <para>Divide the total by 2.</para>
                </listitem>
            </orderedlist>
            <table xml:id="table-cipher-strength">
                <title>Cipher strength rating guide</title>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1"/>
                    <colspec colname="c2" colnum="2"/>
                    <thead>
                        <row>
                            <entry>Cipher strength</entry>
                            <entry>Score</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>0 bits (no encryption)</entry>
                            <entry>0%</entry>
                        </row>
                        <row>
                            <entry>&lt; 128 bits (e.g., 40, 56)</entry>
                            <entry>20%</entry>
                        </row>
                        <row>
                            <entry>&lt; 256 bits (e.g., 128, 168)</entry>
                            <entry>80%</entry>
                        </row>
                        <row>
                            <entry>>= 256 bits (e.g., 256)</entry>
                            <entry>100%</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
    </section>
    <section>
        <title>SSL Configuration Advice</title>
        <para>The configuration advice from the original document has been superseded by a
            standalone document with comprehensive coverage of this topic. You can download the
                <link xlink:href="https://www.ssllabs.com/projects/best-practices/">SSL/TLS
                Deployment Best Practices</link> document from the SSL Labs web site.</para>
    </section>
    <section>
        <title>Changes</title>
        <para>We are planning to release a completely new version of the rating guide in Q1 2015,
            building on what we have learned from the current version. In the meantime, we are
            making small revisions in order to react to the threats as they come and go.</para>
        <section>
            <title>Changes in 2009c (7 February 2013)</title>
            <para>Changes to the grading criteria:</para>
            <itemizedlist>
                <listitem>
                    <para>SSL 2.0 is not allowed (F). </para>
                </listitem>
                <listitem>
                    <para>Insecure renegotiation is not allowed (F). </para>
                </listitem>
                <listitem>
                    <para>Vulnerability to the BEAST attack caps the grade at B. </para>
                </listitem>
                <listitem>
                    <para>Vulnerability to the CRIME attack caps the grade at B. </para>
                </listitem>
                <listitem>
                    <para>The test results no longer show the numerical score (0-100) because we
                        have realized that the letter grade (A-F) is more useful.</para>
                </listitem>
            </itemizedlist>
            <para>In addition, we've taken the opportunity to remove the old configuration advice,
                directing the readers to our <link
                    xlink:href="https://www.ssllabs.com/projects/best-practices/">SSL/TLS Deployment
                    Best Practices</link> document instead.</para>
        </section>
        <section>
            <title>Changes in 2009d (9 September 2013)</title>
            <itemizedlist>
                <listitem>
                    <para>No longer require server-side mitigation for the BEAST attack.</para>
                </listitem>
            </itemizedlist>
        </section>
        <section>
            <title>Changes in 2009e (21 January 2014)</title>
            <itemizedlist>
                <listitem>
                    <para>Support for TLS 1.2 is now required to get the A grade. Without, the grade
                        is capped a B.</para>
                </listitem>
                <listitem>
                    <para>Keys below 2048 bits (e.g., 1024) are now considered weak, and the grade
                        capped at B.</para>
                </listitem>
                <listitem>
                    <para>Keys under 1024 bits are now considered insecure (F).</para>
                </listitem>
                <listitem>
                    <para>This version introduces warnings as part of rating criteria. In most
                        cases, warnings are about issues that do not yet affect the grade, but
                        likely will in the future. Server administrators are advised to correct the
                        warnings as soon as possible.</para>
                </listitem>
                <listitem>
                    <para>Warning: RC4 is used with TLS 1.1 or newer protocol. Because RC4 is weak,
                        the only reason to use it is to mitigate the BEAST attack. For some, BEAST
                        is still a threat. Because TLS 1.1 and newer are not vulnerable to BEAST,
                        there is no reason to use RC4 with them.</para>
                </listitem>
                <listitem>
                    <para>Warning: No support for Forward Security.</para>
                </listitem>
                <listitem>
                    <para>Warning: Secure renegotiation is not supported.</para>
                </listitem>
                <listitem>
                    <para>New grade A- is introduced for servers with generally good configuration
                        that have one or more warnings.</para>
                </listitem>
                <listitem>
                    <para>New grade A+ is introduced for servers with exceptional configurations. At
                        the moment, this grade is awarded to servers with good configuration, no
                        warnings, and HTTP Strict Transport Security support with a
                            <literal>max-age</literal> of at least 6 months.</para>
                </listitem>
                <listitem>
                    <para>MD5 certificate signatures are now considered insecure (F).</para>
                </listitem>
                <listitem>
                    <para>Clarified that insecure certificate signatures affect the certificate
                        score. This has always been the case for MD2.</para>
                </listitem>
                <listitem>
                    <para>Clarified that the strength of DHE and ECDHE parameters affects key
                        exchange scoring. This has always been the case, but previous revisions of
                        the text were not clear about it.</para>
                </listitem>
            </itemizedlist>
        </section>
        <section>
            <title>Changes in 2009f (4 September 2014)</title>
            <itemizedlist>
                <listitem>
                    <para>Don’t award A+ to servers that use SHA1 certificates.</para>
                </listitem>
            </itemizedlist>
        </section>
        <section>
            <title>Changes in 2009g (15 October 2014)</title>
            <itemizedlist>
                <listitem>
                    <para>Cap to C if vulnerable to POODLE.</para>
                </listitem>
                <listitem>
                    <para>Note: POODLE TLS is treated as a patchable and exploitable vulnerability,
                        which means it gets an F.</para>
                </listitem>
            </itemizedlist>
        </section>
        <section>
            <title>Changes in 2009h (30 October 2014)</title>
            <itemizedlist>
                <listitem>
                    <para>Don’t award A+ to servers that don’t support
                            <literal>TLS_FALLBACK_SCSV</literal>.</para>
                </listitem>
                <listitem>
                    <para>Cap to B if SSL 3 is supported.</para>
                </listitem>
            </itemizedlist>
        </section>
        <section>
            <title>Changes in 2009i (8 December 2014)</title>
            <itemizedlist>
                <listitem>
                    <para>Cap to B if RC4 is supported.</para>
                </listitem>
                <listitem>
                    <para>Cap to B if the chain is incomplete.</para>
                </listitem>
                <listitem>
                    <para>Fail servers that have SSL3 as their best protocol.</para>
                </listitem>
            </itemizedlist>
        </section>
        <section>
            <title>Changes in 2009j (20 May 2015)</title>
            <itemizedlist>
                <listitem>
                    <para>Cap to B if using weak DH parameters (less than 2048 bits).</para>
                </listitem>
                <listitem>
                    <para>Increase CRIME penalty to C (was B).</para>
                </listitem>
                <listitem>
                    <para>Cap to C if RC4 is used with TLS 1.1+.</para>
                </listitem>
                <listitem>
                    <para>Cap to C if not supporting TLS 1.2.</para>
                </listitem>
            </itemizedlist>
        </section>
        <section>
            <title>Changes in 2009k (14 October 2015)</title>
            <itemizedlist>
                <listitem>
                    <para>Fail servers that support only RC4 suites.</para>
                </listitem>
            </itemizedlist>
        </section>
    </section>
    <section>
        <title>About SSL</title>
        <para>The Secure Sockets Layer (SSL) protocol is a standard for encrypted network
            communication. It was conceived at Netscape in 1994; version 2.0 was the first public
            release. SSL was later upgraded to 3.0, and, with further minor improvements,
            standardized under the name TLS (<firstterm>Transport Layer Security</firstterm>). TLS
            v1.2, the most recent version, is defined by <link
                xlink:href="https://www.ietf.org/rfc/rfc5246.txt">RFC 5246</link>.</para>
    </section>
    <section>
        <title>About SSL Labs</title>
        <para><link xlink:href="https://www.ssllabs.com">SSL Labs</link> is Qualys&#x2019;s research
            effort to understand SSL/TLS and PKI as well as to provide tools and documentation to
            assist with assessment and configuration. Since 2009, when SSL Labs was launched,
            hundreds of thousands of assessments have been performed using the free online
            assessment tool. Other projects run by SSL Labs include periodic Internet-wide surveys
            of SSL configuration and <link
                xlink:href="https://www.trustworthyinternet.org/ssl-pulse/">SSL Pulse</link>, a
            monthly scan of about 170,000 most popular SSL-enabled web sites in the world.</para>
    </section>
    <section>
        <title>About Qualys</title>
        <para><link xlink:href="https://www.qualys.com">Qualys, Inc.</link> (NASDAQ: QLYS), is a
            pioneer and leading provider of cloud security and compliance solutions with over 6,700
            customers in more than 100 countries, including a majority of each of the Forbes Global
            100 and Fortune 100. The QualysGuard Cloud Platform and integrated suite of solutions
            help organizations simplify security operations and lower the cost of compliance by
            delivering critical security intelligence on demand and automating the full spectrum of
            auditing, compliance, and protection for IT systems and web applications. Founded in
            1999, Qualys has established strategic partnerships with leading managed service
            providers and consulting organizations, including BT, Dell SecureWorks, Fujitsu, IBM,
            NTT, Symantec, Verizon, and Wipro. The company is also a founding member of the <link
                xlink:href="https://www.cloudsecurityalliance.org">Cloud Security Alliance</link>
            (CSA).</para>
        <para>Qualys, the Qualys logo and QualysGuard are proprietary trademarks of Qualys, Inc. All
            other products or names may be trademarks of their respective companies.</para>
    </section>
</article>
